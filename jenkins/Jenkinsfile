pipeline {
  agent any
  environment {
    AWS_DEFAULT_REGION = "ap-south-1"
    ECR_REPO          = "myapp"
    CLUSTER_NAME      = "demo-eks"
  }
  stages {
    stage('Checkout') {
      steps { git branch: 'main', url: 'https://github.com/anikettalwekar/aws-devops-eks-project.git' }
    }
    stage('Build Docker') {
      steps { sh 'docker build -t $ECR_REPO:latest app' }
    }
    stage('Login to ECR') {
      steps {
        withAWS(region: env.AWS_DEFAULT_REGION, credentials: 'aws-creds') {
          sh 'aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com'
        }
      }
    }
    stage('Tag & Push') {
  steps {
    withAWS(region: 'ap-south-1', credentials: 'aws-creds') {
      sh '''
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        docker tag myapp:latest $ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/myapp:latest
        docker push $ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/myapp:latest
      '''
    }
  }
}

    stage('Deploy to EKS') {
  steps {
    withAWS(region: 'ap-south-1', credentials: 'aws-creds') {
      sh '''
        aws eks update-kubeconfig --name demo-eks --region ap-south-1
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
      '''
        }
      }
    }
  }
}
